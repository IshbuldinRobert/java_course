package seminars.seminar3;

// –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –ø–ª–∞–Ω–µ—Ç –°–æ–ª–Ω–µ—á–Ω–æ–π
// —Å–∏—Å—Ç–µ–º—ã –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ —Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è–º–∏.
// üìå –í—ã–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–π –ø–ª–∞–Ω–µ—Ç—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–≥–æ
// –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –≤ —Å–ø–∏—Å–∫–µ.
// –ó–∞–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö –±–ª–æ–∫–æ–≤
// –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2.2 (–µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ)
// üìå –ü—Ä–æ–π—Ç–∏ –ø–æ —Å–ø–∏—Å–∫—É –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è –∏ —É–¥–∞–ª–∏—Ç—å
// –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã.

import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

public class exs2 {

    static List<String> makeRandomPlanetsList() {
        List<String> planets = new ArrayList<>();
        planets.add("–Æ–ø–∏—Ç–µ—Ä");
        planets.add("–°–∞—Ç—É—Ä–Ω");
        planets.add("–í–µ–Ω–µ—Ä–∞");
        planets.add("–ù–µ–ø—Ç—É–Ω");
        planets.add("–ú–∞—Ä—Å");
        planets.add("–í–µ–Ω–µ—Ä–∞");
        planets.add("–ó–µ–º–ª—è");
        planets.add("–ú–∞—Ä—Å");
        planets.add("–ú–∞—Ä—Å");
        planets.add("–°–∞—Ç—É—Ä–Ω");

        return planets;
    }

    static void countRepeatPlanet(List<String> planets) {
        Collections.sort(planets);
        String repeatPlanet = planets.get(0);
        int counter = 1;

        for (int i = 1; i < planets.size(); i++) {
            if (planets.get(i).equals(repeatPlanet) && i != planets.size() - 1) {
                counter++;
            }
            else {
                System.out.printf("%s: %d\n", repeatPlanet, counter);
                repeatPlanet = planets.get(i);
                counter = 1;
            }
        }
        System.out.printf("%s: %d\n", repeatPlanet, counter);

    }

    static void removeRepeatition(List<String> planets) {

        // 1
        // Collections.sort(planets);
        // String repeatPlanet = "";
        // int meetCount = 0;
        // Iterator<String> iter = planets.iterator();

        // while (iter.hasNext()) {
        //     String pl = iter.next();
        //     if (repeatPlanet.equals(pl) && meetCount > 0) {
        //         iter.remove();
        //     }
        //     else {
        //         meetCount = 0;
        //         repeatPlanet = pl;
        //     }
        //     meetCount++;
        // }

        // 2
        Collections.sort(planets);
        String currentPlanet = planets.get(planets.size() - 1);

        for (int i = planets.size()-2; i >= 0; i--) {
            if (planets.get(i).equals(currentPlanet)) {
                planets.remove(i);
            }
            else {
                currentPlanet = planets.get(i);
            }
        }
    }
    public static void main(String[] args) {
        List<String> planets = makeRandomPlanetsList();
        countRepeatPlanet(planets);
        removeRepeatition(planets);
        System.out.println(planets);
    }
}